suma = 0
datos = seq(a,b,by=((b-a)/n))
i = 1
for(i in 1:(length(datos)-1)){
deltaY = f(datos[i+1])-f(datos[i])
deltaX = datos[i+1]-datos[i]
calculo = sqrt(1+(deltaY/deltaX)^2)*deltaX
suma = calculo + suma
}
return(c(suma,datos))
}
a = -1
b = 1
n = 1000
m=10
l = longitudCurva(a,b,n)
cat(l[1])
datos = l[2:length(l)]
graficar <- function(datos,a,b,paso,raro){
x = seq(a,b,by=((b-a)/n))
y = f(x)
x2 = seq(a,b,by=((b-a)/m))
y2= f(x2)
par(mfrow=c(1,2))
plot(x,y,type="l",asp=1,main="Curva General")
plot(x2,y2,type="l",asp=1,main="Curva Aproximada")
lines(datos,f(datos),col="red",lwd=5)
}
graficar(datos,1,-1,n,m)
f = function(x){
return (x^3-3x)
}
longitudCurva = function(a,b,n){
suma = 0
datos = seq(a,b,by=((b-a)/n))
i = 1
for(i in 1:(length(datos)-1)){
deltaY = f(datos[i+1])-f(datos[i])
deltaX = datos[i+1]-datos[i]
calculo = sqrt(1+(deltaY/deltaX)^2)*deltaX
suma = calculo + suma
}
return(c(suma,datos))
}
a = -1
b = 1
n = 1000
m=10
l = longitudCurva(a,b,n)
cat(l[1])
datos = l[2:length(l)]
graficar <- function(datos,a,b,paso,raro){
x = seq(a,b,by=((b-a)/n))
y = f(x)
x2 = seq(a,b,by=((b-a)/m))
y2= f(x2)
par(mfrow=c(1,2))
plot(x,y,type="l",asp=1,main="Curva General")
plot(x2,y2,type="l",asp=1,main="Curva Aproximada")
lines(datos,f(datos),col="red",lwd=5)
}
graficar(datos,1,-1,n,m)
funcion <- expression((x^4/8) + (1/(4*x^2)))
LongitudCurva <- function(funcion, ex1, ex2){
return(integrate( sqrt(1 + (funcion * funcion)), lower = ex1, upper = ex2))
}
exp1 <- 1
exp2 <- 2
funcion <- expression((x^4/8) + (1/(4*x^2)))
x <- D(funcion, "X")
resul <- LongitudCurva(x, exp1, exp2)
LongitudCurva <- function(funcion, ex1, ex2){
return(integrate( sqrt(1 + funcion), lower = ex1, upper = ex2))
}
exp1 <- 1
exp2 <- 2
funcion <- expression((x^4/8) + (1/(4*x^2)))
x <- D(funcion, "X")
resul <- LongitudCurva(x, exp1, exp2)
funcion <- expression((x^4/8) + (1/(4*x^2)))
derivada <- D(funcion, "X")
final <- function(x)  1+ derivada
View(final)
View(final)
final
funcion <- expression((x^4/8) + (1/(4*x^2)))
derivada <- D(funcion, "X")
final <- function(x)  1 + derivada*derivada
funcion <- expression((x^4/8) + (1/(4*x^2)))
derivada <- D(funcion, "X")
final <- function(x) sqrt( 1 + derivada*derivada)
View(final)
View(final)
LongitudCurva <- function(funcion, ex1, ex2){
return(funcion, lower = ex1, upper = ex2)
}
exp1 <- 1
exp2 <- 2
funcion <- expression((x^4/8) + (1/(4*x^2)))
derivada <- D(funcion, "X")
final <- function(x) sqrt( 1 + derivada*derivada)
resul <- LongitudCurva(final, exp1, exp2)
LongitudCurva <- function(funcion, ex1, ex2){
return (integrate(funcion, lower = ex1, upper = ex2))
}
exp1 <- 1
exp2 <- 2
funcion <- expression((x^4/8) + (1/(4*x^2)))
derivada <- D(funcion, "X")
final <- function(x) sqrt( 1 + derivada*derivada)
resul <- LongitudCurva(final, exp1, exp2)
final(3)
final(4)
final(3)
exp1 <- 1
exp2 <- 2
funcion <- expression((x^4/8) + (1/(4*x^2)))
derivada <- D(funcion, "X")
final <- function(x)  derivada
final(3)
funcion <- expression(x^2)
derivada <- D(funcion, "X")
final <- function(x){
derivada
}
final(3)
final <- function(x){
derivada(x)
}
final(3)
funcion <- expression(x^2)
derivada <- D(funcion, "X")
derivada
exp1 <- 1
exp2 <- 2
funcion <- expression(x^2)
derivada <- D(funcion, "X")
funcion <- expression((x^4/8) + (1/(4*x^2)))
x  <- D(funcion, "x")
x  <- expression( D(funcion, "x") )
x
x(2)
x  <- function(x)( D(funcion, "x") )
x(2)
x
x(1)
x(0)
funcion <- expression((x^4/8) + (1/(4*x^2)))
x  <- ( D(funcion, "x") )
LongitudCurva <- function(funcion, ex1, ex2){
return(integrate( sqrt(1+ funcion^2), lower = ex1, upper = ex2))
}
exp1 <- 1
exp2 <- 2
funcion <- expression((x^4/8) + (1/(4*x^2)))
x  <- ( D(funcion, "x") )
resul <- LongitudCurva(x, exp1, exp2)
x  <- D(funcion, "x") * D(funcion, "x")
LongitudCurva <- function(funcion, ex1, ex2){
x  <- D(funcion, "x") * D(funcion, "x")
return(integrate( sqrt(1+ funcion^2), lower = ex1, upper = ex2))
}
exp1 <- 1
exp2 <- 2
funcion <- expression((x^4/8) + (1/(4*x^2)))
resul <- LongitudCurva(funcion, exp1, exp2)
funcion <- expression((x^4/8) + (1/(4*x^2)))
x  <- D(funcion, "x")
x(1)
funcion <- expression((x^4/8) + (1/(4*x^2)))
x  <- D(funcion, "x")
funcion(1)
LongitudCurva <- function(funcion, ex1, ex2){
return(integrate( sqrt(1 + 4 * x^3/8 -4 * (2*x)/(4*x^2)^2), lower = ex1, upper = ex2))
}
exp1 <- 1
exp2 <- 2
funcion <- expression((x^4/8) + (1/(4*x^2)))
x <- D(funcion,"x")
resul <- LongitudCurva(x, exp1, exp2)
expresion2 = function(x) x+1/4*x
integrate(expresion2, 0,1)
LongitudCurva <- function(funcion, ex1, ex2){
return(integrate(function(x)sqrt(1 + 4 * x^3/8 -4 * (2*x)/(4*x^2)^2), lower = ex1, upper = ex2))
}
exp1 <- 1
exp2 <- 2
funcion <- expression((x^4/8) + (1/(4*x^2)))
x <- D(funcion,"x")
resul <- LongitudCurva(x, exp1, exp2)
LongitudCurva <- function(funcion, ex1, ex2){
return(integrate(function(x)sqrt(1 + 4 * x^3/8 -4 * (2*x)/(4*x^2)^2), lower = ex1, upper = ex2))
}
exp1 <- 1
exp2 <- 2
funcion <- expression((x^4/8) + (1/(4*x^2)))
x <- D(funcion,"x")
resul <- LongitudCurva(x, exp1, exp2)
resul
funcion <- expression(sin(x))
x <- D(funcion,"x")
LongitudCurva <- function(funcion, ex1, ex2){
return(integrate(function(x) cos(x), lower = ex1, upper = ex2))
}
exp1 <- 0
exp2 <- 2
funcion <- expression(sin(x))
x <- D(funcion,"x")
resul <- LongitudCurva(x, exp1, exp2)
resul
LongitudCurva <- function(funcion, ex1, ex2){
return(integrate(function(x) cos(x), lower = ex1, upper = ex2))
}
exp1 <- 2
exp2 <- 0
funcion <- expression(sin(x))
x <- D(funcion,"x")
resul <- LongitudCurva(x, exp1, exp2)
resul
0
LongitudCurva <- function(funcion, ex1, ex2){
return(integrate(function(x) cos(x), lower = ex1, upper = ex2))
}
exp1 <- 0
exp2 <- 2
funcion <- expression(sin(x))
x <- D(funcion,"x")
resul <- LongitudCurva(x, exp1, exp2)
resul
LongitudCurva <- function(funcion, ex1, ex2){
return(integrate(function(x) cos(x), lower = ex1, upper = ex2))
}
exp1 <- 0
exp2 <- 2
funcion <- expression(sin(x))
x <- D(funcion,"x")
resul <- LongitudCurva(x, exp1, exp2)
resul
LongitudCurva <- function(funcion, ex1, ex2){
return(integrate(function(x)sqrt(1 + cos^2(x)), lower = ex1, upper = ex2))
}
exp1 <- 0
exp2 <- 2
funcion <- expression(sin(x))
x <- D(funcion,"x")
resul <- LongitudCurva(x, exp1, exp2)
resul
LongitudCurva <- function(funcion, ex1, ex2){
return(integrate( function(x) sqrt( 1 + cos(x)^2), lower = ex1, upper = ex2))
}
exp1 <- 0
exp2 <- 2
funcion <- expression(sin(x))
x <- D(funcion,"x")
resul <- LongitudCurva(x, exp1, exp2)
resul
LongitudCurva <- function(funcion, ex1, ex2){
return(integrate( function(x) sqrt( 1 + cos^2(x)), lower = ex1, upper = ex2))
}
exp1 <- 0
exp2 <- 2
funcion <- expression(sin(x))
x <- D(funcion,"x")
resul <- LongitudCurva(x, exp1, exp2)
resul
LongitudCurva <- function(funcion, ex1, ex2){
return(integrate( function(x) sqrt( 1 + cos(x)*cos(x)), lower = ex1, upper = ex2))
}
exp1 <- 0
exp2 <- 2
funcion <- expression(sin(x))
x <- D(funcion,"x")
resul <- LongitudCurva(x, exp1, exp2)
resul
deg2rad <- function(deg) {(deg * pi) / (180)}
LongitudCurva <- function(funcion, ex1, ex2){
return(integrate( function(x) sqrt( 1 + cos(x)*cos(x)), lower = ex1, upper = ex2))
}
exp1 <- 0
exp2 <- 2
funcion <- expression(sin(x))
x <- D(funcion,"x")
resul <- LongitudCurva(x, exp1, exp2)
deg2rad(resul)
pi
deg2rad <- function(deg) {(deg * pi) / (180)}
deg2rad <- function(deg) {(deg * 3.141593) / (180)}
LongitudCurva <- function(funcion, ex1, ex2){
return(integrate( function(x) sqrt( 1 + cos(x)*cos(x)), lower = ex1, upper = ex2))
}
exp1 <- 0
exp2 <- 2
funcion <- expression(sin(x))
x <- D(funcion,"x")
resul <- LongitudCurva(x, exp1, exp2)
deg2rad(resul)
deg2rad <- function(deg) {return(deg * 3.141593) / (180)}
LongitudCurva <- function(funcion, ex1, ex2){
return(integrate( function(x) sqrt( 1 + cos(x)*cos(x)), lower = ex1, upper = ex2))
}
exp1 <- 0
exp2 <- 2
funcion <- expression(sin(x))
x <- D(funcion,"x")
resul <- LongitudCurva(x, exp1, exp2)
deg2rad(resul)
deg2rad <- function(deg) {return(deg(0) * 3.141593) / (180)}
LongitudCurva <- function(funcion, ex1, ex2){
return(integrate( function(x) sqrt( 1 + cos(x)*cos(x)), lower = ex1, upper = ex2))
}
exp1 <- 0
exp2 <- 2
funcion <- expression(sin(x))
x <- D(funcion,"x")
resul <- LongitudCurva(x, exp1, exp2)
deg2rad(resul)
deg2rad <- function(deg) {(deg * pi) / (180)}
LongitudCurva <- function(funcion, ex1, ex2){
return(integrate( function(x) sqrt( 1 + cos(x)*cos(x)), lower = ex1, upper = ex2))
}
exp1 <- 0
exp2 <- 2
funcion <- expression(sin(x))
x <- D(funcion,"x")
resul <- LongitudCurva(x, exp1, exp2)
resul
View(resul)
View(resul)
resul.value
View(resul)
View(resul)
resul[0]
resul[1]
deg2rad(resul[1])
resultadofinal <- resul[1]
View(resultadofinal)
View(resultadofinal)
deg2rad <- function(deg) {(deg * pi) / (180)}
LongitudCurva <- function(funcion, ex1, ex2){
return(integrate( function(x) sqrt( 1 + cos(x)*cos(x)), lower = ex1, upper = ex2))
}
exp1 <- 0
exp2 <- 2
funcion <- expression(sin(x))
x <- D(funcion,"x")
resul <- LongitudCurva(x, exp1, exp2)
resul[1]
resultadofinal <- resul[1]
deg2rad(resul[1])
resultadofinal <- resul[1][1]
View(resul)
View(resul)
resul[["value"]]
mamahuevo <- resul[["value"]]
deg2rad <- function(deg) {(deg * pi) / (180)}
LongitudCurva <- function(funcion, ex1, ex2){
return(integrate( function(x) sqrt( 1 + cos(x)*cos(x)), lower = ex1, upper = ex2))
}
exp1 <- 0
exp2 <- 2
funcion <- expression(sin(x))
x <- D(funcion,"x")
resul <- LongitudCurva(x, exp1, exp2)
resul[1]
resultadof <- resul[["value"]]
deg2rad(resultadof)
deg2rad <- function(deg) {return((deg * pi) / (180))}
LongitudCurva <- function(funcion, ex1, ex2){
return(integrate( function(x) sqrt( 1 + cos(x)*cos(x)), lower = ex1, upper = ex2))
}
exp1 <- 0
exp2 <- 2
funcion <- expression(sin(x))
x <- D(funcion,"x")
resul <- LongitudCurva(x, exp1, exp2)
resul[1]
resultadof <- resul[["value"]]
deg2rad(resultadof)
deg2rad <- function(deg) {return((deg * pi) / (180))}
LongitudCurva <- function(funcion, ex1, ex2){
return(integrate( function(x) sqrt( 1 + cos(x)*cos(x)), lower = 0, upper = 2))
}
exp1 <- 0
exp2 <- 2
funcion <- expression(sin(x))
x <- D(funcion,"x")
resul <- LongitudCurva(x, exp1, exp2)
resul[1]
resultadof <- resul[["value"]]
deg2rad(resultadof)
deg2rad <- function(deg) {return((deg * pi) / (180))}
LongitudCurva <- function(funcion, ex1, ex2){
return(integrate( function(x) sqrt( 1 + cos(x)^2), lower = ex1, upper = ex2))
}
exp1 <- 0
exp2 <- 2
funcion <- expression(sin(x))
x <- D(funcion,"x")
resul <- LongitudCurva(x, exp1, exp2)
resul[1]
resultadof <- resul[["value"]]
deg2rad(resultadof)
deg2rad <- function(deg) {return((deg * pi) / (180))}
LongitudCurva <- function(funcion, ex1, ex2){
return(integrate( function(x) {sqrt( 1 + cos(x)^2)}, lower = ex1, upper = ex2))
}
exp1 <- 0
exp2 <- 2
funcion <- expression(sin(x))
x <- D(funcion,"x")
resul <- LongitudCurva(x, exp1, exp2)
resul[1]
resultadof <- resul[["value"]]
deg2rad(resultadof)
deg2rad <- function(deg) {return((deg * pi) / (180))}
LongitudCurva <- function(funcion, ex1, ex2){
return(integrate( function(x) {sqrt( 1 + cos(x)^2)}, lower = ex1, upper = ex2))
}
exp1 <- 0
exp2 <- 2
funcion <- expression(sin(x))
x <- D(funcion,"x")
resul <- LongitudCurva(x, exp1, exp2)
resul[1]
resultadof <- resul[["value"]]
deg2rad(resultadof)
deg2rad <- function(deg) {return((deg * pi) / (180))}
LongitudCurva <- function(funcion, ex1, ex2){
return(integrate( function(x) {sqrt( 1 + cos(x)^2)}, lower = ex1, upper = ex2))
}
exp1 <- 0
exp2 <- 2
funcion <- expression(sin(x))
x <- D(funcion,"x")
resul <- LongitudCurva(x, exp1, exp2)
resul[1]
resultadof <- resul[["value"]]
deg2rad(resultadof)
View(LongitudCurva)
View(LongitudCurva)
View(LongitudCurva)
View(LongitudCurva)
LongitudCurva <- function(funcion, ex1, ex2){
return(integrate( function(x) {sqrt( 1 + cos(x)*cos(x))}, lower = ex1, upper = ex2))
}
exp1 <- 0
exp2 <- 2
funcion <- expression(sin(x))
x <- D(funcion,"x")
resul <- LongitudCurva(x, exp1, exp2)
resul
deg2rad <- function(deg) {return((deg * pi) / (180))}
LongitudCurva <- function(funcion, ex1, ex2){
return(integrate( function(x) {sqrt( 1 + cos(x)*cos(x))}, lower = ex1, upper = ex2))
}
exp1 <- 0
exp2 <- 2
funcion <- expression(sin(x))
x <- D(funcion,"x")
resul <- LongitudCurva(x, exp1, exp2)
resul
resultadof <- resul[["value"]]
deg2rad(resultadof)
deg2rad <- function(deg) {
return((deg * pi) / (180))
}
LongitudCurva <- function(funcion, ex1, ex2){
return(integrate( function(x) {sqrt( 1 + cos(x)*cos(x))}, lower = ex1, upper = ex2))
}
exp1 <- 0
exp2 <- 2
funcion <- expression(sin(x))
x <- D(funcion,"x")
resul <- LongitudCurva(x, exp1, exp2)
resul
resultadof <- resul[["value"]]
deg2rad(resultadof)
f = function(x){
return (1-(x^2))
}
longitudCurva = function(a,b,n){
suma = 0
datos = seq(a,b,by=((b-a)/n))
i = 1
for(i in 1:(length(datos)-1)){
deltaY = f(datos[i+1])-f(datos[i])
deltaX = datos[i+1]-datos[i]
calculo = sqrt(1+(deltaY/deltaX)^2)*deltaX
suma = calculo + suma
}
return(c(suma,datos))
}
a = -1
b = 1
n = 1000
m=10
l = longitudCurva(a,b,n)
cat(l[1])
datos = l[2:length(l)]
graficar <- function(datos,a,b,paso,raro){
x = seq(a,b,by=((b-a)/n))
y = f(x)
x2 = seq(a,b,by=((b-a)/m))
y2= f(x2)
par(mfrow=c(1,2))
plot(x,y,type="l",asp=1,main="Curva General")
plot(x2,y2,type="l",asp=1,main="Curva Aproximada")
lines(datos,f(datos),col="red",lwd=5)
}
graficar(datos,1,-1,n,m)
install.packages("fractal")
library(fractal)
